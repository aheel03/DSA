struct linkedlist{
    int size=0;
    struct node{
        node *next;
        int val;
    };
    node* head=NULL;
    node* tail=NULL;

    void InsertFirst(int x){
        size++;
        node* a=(node*)malloc(sizeof(node));
        a->next=NULL;
        a->val=x;
        if(head==NULL){
            head=a;
            tail=a;
        }else{
            a->next=head;
            head=a;
        }
    }

    void InsertLast(int x){
        size++;
        node* a=(node*)malloc(sizeof(node));
        a->next=NULL;
        a->val=x;
        if(tail==NULL){
            head=a;
            tail=a;
        }else{
            tail->next=a;
            tail=a;
        }
    }

    void DeleteFirst(){
        size--;
        if(head==NULL) return;

        if (head==tail){
            int x=head->val;
            head=NULL;
            tail=NULL;
        }else{
            int x=head->val;
            head=head->next;
        }
    }

    void DeleteLast(){
        size--;
        if(head==NULL){
            return;
        }else if(head==tail){
            head=tail=NULL;
        }else{
            node *current=head;
            while (current->next!=tail){
                current=current->next;
            }
            tail=current;
            current->next=NULL;
        }
    }

    void print(){
        node* p=head;
        while(p!=NULL){
            cout<<p->val<<" ";
            p=p->next;
        }
        cout<<endl;
    }

    int SIZE(){
        return size;
    }
};
